apply from: 'version.gradle'

apply plugin: 'java'

description = 'OpenEphyra'

compileJava {
    options.encoding = "UTF-8"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'lib/ml'
        dirs 'lib/nlp'
        dirs 'lib/qa'
        dirs 'lib/search'
    }
}

dependencies {

    // ml
    compile name: 'maxent'
    // compile group: 'org.apache.opennlp', name: 'opennlp-maxent', version: '3.0.3'

    compile name: 'minorthird'

    // nlp
    compile name: 'jwnl'
    compile name: 'lingpipe'

    //compile name: 'opennlp-tools'
    compile group: 'org.apache.opennlp', name: 'opennlp-tools', version: '1.5.0'


    compile name: 'plingstemmer'

    //compile name: 'snowball'
    compile group: 'org.tartarus', name: 'snowball', version: '1.0'


    compile name: 'stanford-ner'
    //compile name: 'stanford-parser'
    compile group: 'edu.stanford.nlp', name: 'stanford-parser', version: '1.6.2'
    compile name: 'stanford-postagger'
    //compile group: 'edu.stanford.nlp', name: 'stanford-pos-tagger', version: '3.0.2'

    // qa
    compile name: 'javelin'

    // search
    compile name: 'bing-search-java-sdk'
    compile name: 'googleapi'
    compile name: 'indri'
    compile name: 'yahoosearch'

    // util
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    compile group: 'org.htmlparser', name: 'htmlparser', version: '1.6'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'

    testCompile group: 'junit', name: 'junit', version: junitVersion
}

jar {
    baseName = 'OpenEphyra'
    version =  openEphyraVersion
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'info.ephyra.OpenEphyra'
        )
    }
}

// setup the bcp utility on /opt/myhousehold/bcp
task setup(type: Copy) {
    dependsOn build

    delete "./dist"

    into './dist/lib'
    from configurations.runtime
    from jar

    from(new File(project.rootDir.toString() + '/scripts/openEphyra.sh')) {
        into '..'
    }

    from(new File(project.rootDir.toString() + '/resources')) {
        into '../resources'
    }
//    from(new File(project.rootDir.toString() + '/ubuntu/upm.sh'))
//    from(new File(project.rootDir.toString() + '/ubuntu/images/128x128/upm.png'))
}
